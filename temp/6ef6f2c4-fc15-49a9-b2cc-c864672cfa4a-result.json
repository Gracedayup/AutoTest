{"name": "测试登录功能正常", "status": "failed", "statusDetails": {"message": "AssertionError: Expected <成功> to end with <成功1功>, but did not.", "trace": "self = <test_case.test_login.test_login.TestLogin object at 0x000001F9E7F14DC0>\nargs = {'login': {'code': 0, 'headers': {'Content-Type': 'application/json'}, 'method': 'post', 'name': '正常登录', ...}}\n\n    @allure.feature('智能交通')\n    @allure.story('登录')\n    @allure.step('步骤：测试登录功能')\n    @allure.title(\"测试登录功能正常\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"args\", YamlUtil(os.getcwd()+\"/test_case/test_login/login.yaml\").read_yaml())\n    def test_login(self, args):\n        print(args)\n        url = args['login']['url']\n        param = json.dumps(args['login']['params'])\n        header = args['login']['headers']\n        result = requests.post(url=url, data=param, headers=header)\n        print(\"返回结果为：\", result.json())\n    \n        assert result.json()['code'] == args['login']['code']\n        assert result.json()['codeRemark'] == \"成功\"\n>       assert assertpy.assert_that(result.json()['codeRemark']).ends_with(\"成功1功\")\nE       AssertionError: Expected <成功> to end with <成功1功>, but did not.\n\ntest_case\\test_login\\test_login.py:29: AssertionError"}, "steps": [{"name": "步骤：测试登录功能", "status": "failed", "statusDetails": {"message": "AssertionError: Expected <成功> to end with <成功1功>, but did not.\n", "trace": "  File \"C:\\Users\\csq\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\workspaces\\interface_automation_test\\test_case\\test_login\\test_login.py\", line 29, in test_login\n    assert assertpy.assert_that(result.json()['codeRemark']).ends_with(\"成功1功\")\n  File \"C:\\Users\\csq\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\assertpy\\string.py\", line 205, in ends_with\n    self.error('Expected <%s> to end with <%s>, but did not.' % (self.val, suffix))\n  File \"C:\\Users\\csq\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\assertpy\\assertpy.py\", line 433, in error\n    raise AssertionError(out)\n"}, "parameters": [{"name": "args", "value": "{'login': {'name': '正常登录', 'url': 'http://192.168.50.49:6001/smw/UAC/CPLogin', 'method': 'post', 'headers': {'Content-Type': 'application/json'}, 'params': {'userCode': 'sunny', 'password': '7f3845816cd6f12cdf7523c2af36ed0f'}, 'code': 0}}"}], "start": 1649311587938, "stop": 1649311588025}], "parameters": [{"name": "args", "value": "{'login': {'name': '正常登录', 'url': 'http://192.168.50.49:6001/smw/UAC/CPLogin', 'method': 'post', 'headers': {'Content-Type': 'application/json'}, 'params': {'userCode': 'sunny', 'password': '7f3845816cd6f12cdf7523c2af36ed0f'}, 'code': 0}}"}], "start": 1649311587938, "stop": 1649311588037, "uuid": "55efbd01-62b5-4c46-a8f7-11d4f5770c34", "historyId": "c91bb41f8949b55b3de432f46a2d66d2", "testCaseId": "db7615bd7a5b6cca30352bc87a53d7bb", "fullName": "test_case.test_login.test_login.TestLogin#test_login", "labels": [{"name": "story", "value": "登录"}, {"name": "feature", "value": "智能交通"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "test_case.test_login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-8LS2KV9"}, {"name": "thread", "value": "27732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_login.test_login"}]}